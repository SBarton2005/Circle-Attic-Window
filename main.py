import turtle
h = turtle.Turtle()
h.up()
h.backward(245)
h.right(90)
h.forward(100)
h.left(90)
def house():
  number = int(input("# of Houses: "))
  i = 0
  while i < number:
    length = int(input("Length: "))
    height = int(input("Height: "))
    hc = input("House Color: ")
    dh = int(input("Door Height: "))
    dw = int(input("Door Width: "))
    dc = input("Door Color: ")
    distance = (length / 2) - (dw /2)
    chimney = input("Is there a chimeny (y/n): ")
    if chimney == "y":
      ch = int(input("Chimney Height: "))
      cw = int(input("Chimney Width: "))
      cd = ch - (cw * (3 ** .5))
      cc = input("Chimeny Color: ")
    aw = input("Is there an attic window (y/n): " )
    if aw == "y":
      radius = int(input("Radius: "))
      ah = (length / 2) * (3 ** (1 / 2))
      center = ah / 2
      ctw = center - radius
      wc = input("Circle Window Color: ")
    h.down()
    h.fillcolor(hc)
    h.begin_fill()
    h.forward(length)
    h.left(90)
    h.forward(height)
    h.left(30)
    h.forward(length)
    h.left(120)
    h.forward(length)
    h.left(120)
    h.forward(length)
    h.left(180)
    h.forward(length)
    h.left(90)
    h.forward(height)
    h.left(90)
    h.end_fill()
    h.forward(distance)
    h.left(90)
    h.fillcolor(dc)
    h.begin_fill()
    h.forward(dh)
    h.right(90)
    h.forward(dw)
    h.right(90)
    h.forward(dh)
    h.right(90)
    h.forward(dw)
    h.end_fill()
    h.right(180)
    h.forward(dw)
    if chimney == "y":
      h.fillcolor(cc)
      h.right(180)
      h.forward(dw)
      h.forward(distance)
      h.right(90)
      h.forward(height)
      h.begin_fill()
      h.forward(ch)
      h.right(90)
      h.forward(cw)
      h.right(90)
      h.forward(cd)
      h.right(30)
      h.forward(2*cw)
      h.left(30)
      h.end_fill()
      h.forward(height)
      h.left(90)
      h.forward(distance)
      h.forward(dw)
    if aw == "y":
      h.up()
      h.backward(dw/2)
      h.left(90)
      h.forward(height)
      h.forward(ctw)
      h.right(90)
      h.down()
      h.fillcolor(wc)
      h.begin_fill()
      h.circle(radius)
      h.end_fill()
      h.left(90)
      h.forward(radius*2)
      h.backward(radius)
      h.right(90)
      h.forward(radius)
      h.backward(radius*2)
      h.forward(radius)
      h.right(90)
      h.up()
      h.forward(center)
      h.forward(height)
      h.left(90)
      h.forward(dw/2)
    h.up()
    a = distance + 20
    h.forward(a)
    i += 1
house()